{"version":3,"sources":["Components/common/FormsControls/FormsControls.module.css","utils/validators/index.js","Components/common/FormsControls/FormsControls.js","hoc/withAuthRedirect.js","Components/Messages/Messages.module.css","Components/Messages/Dialog/Dialog.js","Components/Messages/Message/Message.js","Components/Messages/Messages.js","Components/Messages/MessagesContainer.js"],"names":["module","exports","formControl","error","formSummaryError","__webpack_require__","d","__webpack_exports__","required","maxLength","value","length","concat","Element","_ref","input","meta","props","Object","D_it_incubator_social_network_node_modules_babel_runtime_helpers_esm_objectWithoutProperties__WEBPACK_IMPORTED_MODULE_0__","hasError","touched","react__WEBPACK_IMPORTED_MODULE_1___default","a","createElement","_Element","assign","className","styles","withAuthRedirect","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","n","react_router_dom__WEBPACK_IMPORTED_MODULE_1__","react_redux__WEBPACK_IMPORTED_MODULE_2__","mapStateToPropsForRedirect","state","isAuth","auth","Component","connect","to","messages","messagesUsers","messagesBlock","messageYours","Dialog","path","id","react_default","dialog","react_router_dom","name","Message","yours","text","message","maxLength100","Textarea","AddMessageForm","onSubmit","handleSubmit","Field","component","validate","placeholder","reduxForm","form","Messages","dialogsElements","messagesPage","dialogs","map","Messages_Dialog_Dialog","messagesElements","Messages_Message_Message","Messages_AddMessageForm","values","sendMessage","newMessageBody","compose","withRouter"],"mappings":"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","file":"static/js/5.430abac1.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"formControl\":\"FormsControls_formControl__1ZsEk\",\"error\":\"FormsControls_error__3UqkX\",\"formSummaryError\":\"FormsControls_formSummaryError__2RXnQ\"};","export const required = (value) => {\r\n    if (value) return undefined;\r\n\r\n    return 'Field is required';\r\n};\r\n\r\nexport const maxLength = (maxLength) => (value) => {\r\n    if (value && value.length < maxLength) return undefined;\r\n\r\n    return `Max length is ${maxLength}`;\r\n};","import React from \"react\";\r\nimport styles from './FormsControls.module.css';\r\n\r\nexport const Element = (Element) => ({input, meta, ...props}) => {\r\n    const hasError = meta.touched && meta.error;\r\n    return (\r\n        <div>\r\n            <Element className={styles.formControl + ' ' + (hasError && styles.error)} {...input} {...props} />\r\n            <div>\r\n                {hasError && <span className={styles.error}>{meta.error}</span>}\r\n            </div>\r\n        </div>\r\n    );\r\n};","import React from 'react';\r\nimport {Redirect} from \"react-router-dom\";\r\nimport {connect} from \"react-redux\";\r\n\r\nlet mapStateToPropsForRedirect = (state) => ({isAuth: state.auth.isAuth});\r\n\r\nexport const withAuthRedirect = (Component) => {\r\n    const RedirectComponent = (props) => {\r\n        if (!props.isAuth) {\r\n            return <Redirect to='/login'/>\r\n        }\r\n        return <Component {...props} />\r\n    };\r\n\r\n    const ConnectedAuthRedirectComponent = connect(mapStateToPropsForRedirect)(RedirectComponent);\r\n\r\n    return ConnectedAuthRedirectComponent;\r\n};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"messages\":\"Messages_messages__1SsRp\",\"messagesUsers\":\"Messages_messagesUsers__34qzN\",\"messagesBlock\":\"Messages_messagesBlock___j9Cu\",\"messageYours\":\"Messages_messageYours__2vfTu\"};","import React from 'react';\r\nimport styles from \"../Messages.module.css\";\r\nimport {NavLink} from \"react-router-dom\";\r\n\r\nconst Dialog = (props) => {\r\n    const path = \"/messages/\" + props.id;\r\n\r\n    return (\r\n        <div className={styles.dialog}>\r\n            <NavLink to={path}>{props.name}</NavLink>\r\n        </div>\r\n    )\r\n};\r\n\r\nexport default Dialog;","import React from 'react';\r\nimport styles from \"../Messages.module.css\";\r\n\r\nconst Message = (props) => {\r\n    if (props.yours) {\r\n        return (\r\n            <div className={styles.messageYours}>\r\n                {props.text}\r\n            </div>\r\n        )\r\n    } else {\r\n        return (\r\n            <div className={styles.message}>\r\n                {props.text}\r\n            </div>\r\n        )\r\n    }\r\n};\r\n\r\nexport default Message;","import React from \"react\";\r\nimport styles from './Messages.module.css';\r\nimport Dialog from \"./Dialog/Dialog\";\r\nimport Message from \"./Message/Message\";\r\nimport {Field, reduxForm} from \"redux-form\";\r\nimport {Element} from \"../common/FormsControls/FormsControls\";\r\nimport {maxLength, required} from \"../../utils/validators\";\r\n\r\nconst Messages = (props) => {\r\n    const dialogsElements = props.messagesPage.dialogs.map(dialog => <Dialog id={dialog.id} name={dialog.name}/>);\r\n    const messagesElements = props.messagesPage.messages.map(message => <Message id={message.id}\r\n                                                                                 text={message.text}\r\n                                                                                 yours={message.yours}/>);\r\n\r\n    const addNewMessage = (values) => {\r\n        props.sendMessage(values.newMessageBody);\r\n    };\r\n\r\n    return (\r\n        <div className={styles.messages}>\r\n            <div className={styles.messagesUsers}>\r\n                {dialogsElements}\r\n            </div>\r\n            <div className={styles.messagesBlock}>\r\n                <div>{messagesElements}</div>\r\n\r\n                <AddMessageForm onSubmit={addNewMessage}/>\r\n            </div>\r\n        </div>\r\n    )\r\n};\r\n\r\nconst maxLength100 = maxLength(100);\r\nconst Textarea = Element(\"textarea\");\r\n\r\nlet AddMessageForm = (props) => (\r\n    <form onSubmit={props.handleSubmit}>\r\n        <Field component={Textarea} name='newMessageBody' validate={[required, maxLength100]}\r\n               placeholder='Enter your message...'/>\r\n        <button>Send</button>\r\n    </form>\r\n);\r\nAddMessageForm = reduxForm({form: 'dialogAddMessageForm'})(AddMessageForm);\r\n\r\nexport default Messages;","import {sendMessage} from '../../redux/messages-reducer';\r\nimport Messages from './Messages';\r\nimport {connect} from 'react-redux';\r\nimport {withAuthRedirect} from '../../hoc/withAuthRedirect';\r\nimport {withRouter} from 'react-router-dom';\r\nimport {compose} from 'redux';\r\n\r\nlet mapStateToProps = (state) => ({messagesPage: state.messagesPage});\r\n\r\nexport default compose(\r\n    connect(mapStateToProps, {sendMessage}),\r\n    withRouter,\r\n    withAuthRedirect\r\n)(Messages);"],"sourceRoot":""}