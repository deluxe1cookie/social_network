{"version":3,"sources":["Components/Feed/Feed.module.css","assets/preloader.svg","Components/Messages/Messages.module.css","Components/Music/Music.module.css","Components/Settings/Settings.module.css","serviceWorker.js","api/api.js","redux/common-reducer.js","redux/profile-reducer.js","redux/messages-reducer.js","redux/sidebar-reducer.js","redux/users-reducer.js","redux/auth-reducer.js","redux/app-reducer.js","redux/store.js","Components/Navbar/Navbar.js","Components/Feed/Feed.js","Components/Music/Music.js","Components/Settings/Settings.js","Components/Messages/Dialog/Dialog.js","Components/Messages/Message/Message.js","Components/common/FormsControls/FormsControls.js","utils/validators/index.js","Components/Messages/Messages.js","hoc/withAuthRedirect.js","Components/Messages/MessagesContainer.js","Components/Users/Paginator.js","Components/Users/User.js","Components/Users/Users.js","Components/common/Preloader.js","redux/users-selectors.js","Components/Users/UsersContainer.js","Components/Profile/ProfileInfo/ProfileStatus.js","Components/Profile/ProfileInfo/Contact.js","Components/Profile/ProfileInfo/Contacts.js","Components/Profile/ProfileInfo/ProfileInfo.js","Components/Profile/MyPosts/Post/Post.js","Components/Profile/MyPosts/MyPosts.js","Components/Profile/MyPosts/MyPostsContainer.js","Components/Profile/Profile.js","Components/Profile/ProfileContainer.js","Components/Header/Header.js","Components/Header/HeaderContainer.js","Components/Login/Login.js","App.js","index.js","Components/Navbar/Navbar.module.css","Components/common/FormsControls/FormsControls.module.css","Components/Profile/MyPosts/MyPosts.module.css","Components/Users/Users.module.css","assets/no-photo.png","Components/Profile/ProfileInfo/ProfileInfo.module.css","Components/Profile/MyPosts/Post/Post.module.css","Components/Header/Header.module.css"],"names":["module","exports","feed","__webpack_require__","p","messages","messagesUsers","messagesBlock","messageYours","Boolean","window","location","hostname","match","instance","axios","create","withCredentials","baseURL","headers","API-KEY","usersAPI","page","arguments","length","undefined","pageSize","get","concat","userId","post","delete","authAPI","email","password","rememberMe","profileAPI","status","put","initialState","isFetching","toggleIsFetching","type","commonReducer","state","action","_objectSpread","ADD_POST","SET_STATUS","DELETE_POST","profileData","posts","id","text","likesCount","setStatus","profileReducer","newPost","newPostBody","stateCopy","profile_reducer_objectSpread","Object","toConsumableArray","filter","postId","dialogs","name","yours","messagesReducer","body","newMessageBody","push","assign","sidebarReducer","SET_USERS","users","totalUsersCount","currentPage","followingInProgress","toggleFollowingInProgress","usersReducer","users_reducer_objectSpread","map","u","userID","followed","pageNumber","login","isAuth","setAuthUserData","payload","getAuthUserData","_ref","asyncToGenerator","regenerator_default","a","mark","_callee","dispatch","response","_response$data$data","_login","wrap","_context","prev","next","sent","data","resultCode","stop","_x","apply","this","authReducer","auth_reducer_objectSpread","initialized","appReducer","app_reducer_objectSpread","reducers","combineReducers","common","profilePage","messagesPage","sidebar","usersPage","auth","form","formReducer","app","store","createStore","applyMiddleware","thunkMiddleware","Navbar","react_default","createElement","className","classes","nav","item","react_router_dom","to","Feed","props","styles","Music","Settings","Dialog","path","dialog","Message","message","Element","input","meta","objectWithoutProperties","hasError","touched","error","_Element","formControl","required","value","maxLength","maxLength100","Textarea","AddMessageForm","onSubmit","handleSubmit","Field","component","validate","placeholder","reduxForm","Messages","dialogsElements","Messages_Dialog_Dialog","messagesElements","Messages_Message_Message","Messages_AddMessageForm","values","sendMessage","mapStateToPropsForRedirect","withAuthRedirect","Component","connect","react_router","compose","withRouter","Paginator","pageCount","Math","ceil","pages","i","abs","linkStyle","selectedPage","key","onClick","onPageChanged","User","user","src","photos","small","userDefaultPhoto","photo","alt","disabled","some","onUnfollowClick","onFollowClick","Users","Users_Paginator","Users_User","Preloader","preloader","getUsers","getPageSize","getTotalUsersCount","getCurrentPage","getIsFetching","getFollowingInProgress","UsersContainer","query","URLSearchParams","search","Number","requestUsers","_this","Fragment","common_Preloader","Components_Users_Users","follow","unfollow","React","items","totalCount","_ref2","_callee2","_context2","_x2","_ref3","_callee3","_context3","_x3","ProfileStatus","_useState","useState","_useState2","slicedToArray","editMode","setEditMode","_useState3","_useState4","useEffect","deactivateEditMode","updateStatus","onDoubleClick","autoFocus","onBlur","onChange","e","currentTarget","onKeyPress","Contact","target","rel","href","link","title","Contacts","contactsImages","entries","contacts","el","ProfileInfo_Contact","ProfileInfo","profileInfo","large","fullName","ProfileInfo_ProfileStatus","aboutMe","Profile_ProfileInfo_Contacts","Post","postLogo","postText","maxLength30","AddPostForm","addPostForm","imgAndTextarea","profilePic","cols","rows","newPostBtn","MyPosts","console","log","postsElements","MyPosts_Post_Post","myPosts","MyPosts_AddPostForm","addPost","MyPostsContainer","Profile","Profile_ProfileInfo_ProfileInfo","MyPosts_MyPostsContainer","ProfileContainer","params","getUserProfile","getStatus","Components_Profile_Profile","Header","header","loginBlock","onLogoutClick","HeaderContainer","logout","Components_Header_Header","Input","LoginForm","formSummaryError","errorMessage","stopSubmit","_error","Login_LoginForm","formData","App","initializeApp","Header_HeaderContainer","Components_Navbar_Navbar","render","Profile_ProfileContainer","MessagesContainer","Login","then","ReactDOM","react_redux_es","src_App_0","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.74c4eca4.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"feed\":\"Feed_feed__1sxMI\"};","module.exports = __webpack_public_path__ + \"static/media/preloader.119055be.svg\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"messages\":\"Messages_messages__1SsRp\",\"messagesUsers\":\"Messages_messagesUsers__34qzN\",\"messagesBlock\":\"Messages_messagesBlock___j9Cu\",\"messageYours\":\"Messages_messageYours__2vfTu\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"feed\":\"Music_feed__2cWsK\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"feed\":\"Settings_feed__8cqYk\"};","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import axios from 'axios';\r\n\r\nconst instance = axios.create({\r\n    withCredentials: true,\r\n    baseURL: 'https://social-network.samuraijs.com/api/1.0/',\r\n    headers: {\r\n        'API-KEY': '2e403f5c-5d3b-4ee4-a662-100f73be85da'\r\n    }\r\n});\r\n\r\nexport const usersAPI = {\r\n    getUsers(page = 1, pageSize = 5) {\r\n        return instance.get(`users?page=${page}&count=${pageSize}`);\r\n    },\r\n    follow(userId) {\r\n        return instance.post(`follow/${userId}`);\r\n    },\r\n    unfollow(userId) {\r\n        return instance.delete(`follow/${userId}`);\r\n    }\r\n};\r\n\r\nexport const authAPI = {\r\n    setAuthUserData() {\r\n        return instance.get('auth/me');\r\n    },\r\n    login(email, password, rememberMe) {\r\n        return instance.post('auth/login', {email, password, rememberMe});\r\n    },\r\n    logout() {\r\n        return instance.delete('auth/login');\r\n    }\r\n};\r\n\r\nexport const profileAPI = {\r\n    getProfile(userId) {\r\n        return instance.get(`profile/${userId}`);\r\n    },\r\n    getStatus(userId) {\r\n        return instance.get(`profile/status/${userId}`);\r\n    },\r\n    updateStatus(status) {\r\n        return instance.put(`profile/status`, {status});\r\n    }\r\n};","const TOGGLE_IS_FETCHING = 'social_network/common/TOGGLE_IS_FETCHING';\r\n\r\nlet initialState = {\r\n    isFetching: false\r\n};\r\n\r\nconst commonReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case TOGGLE_IS_FETCHING: {\r\n            return {...state, isFetching: action.isFetching};\r\n        }\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport const toggleIsFetching = (isFetching) => ({type: TOGGLE_IS_FETCHING, isFetching});\r\n\r\nexport default commonReducer;","import {profileAPI} from '../api/api';\r\nimport {toggleIsFetching} from './common-reducer';\r\n\r\nconst ADD_POST = 'social_network/profile/ADD_POST-POST';\r\nconst SET_PROFILE_DATA = 'social_network/profile/SET_PROFILE_DATA';\r\nconst SET_STATUS = 'social_network/profile/SET_STATUS';\r\nconst DELETE_POST = 'social_network/profile/DELETE_POST';\r\n\r\nexport const initialState = {\r\n    profileData: null,\r\n    status: '',\r\n    posts: [{id: 1, text: 'my first post! hello there!!!!!!!', likesCount: 10},\r\n        {id: 2, text: 'my second post! hello there!!!!!!!', likesCount: 4},\r\n        {id: 3, text: 'my third (3) post! hello there!!!!!!!', likesCount: 25}],\r\n};\r\n\r\nconst profileReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case ADD_POST: {\r\n            let newPost = {\r\n                id: state.posts.length,\r\n                text: action.newPostBody,\r\n                likesCount: 0\r\n            };\r\n\r\n            let stateCopy = {\r\n                ...state,\r\n                posts: [...state.posts, newPost]\r\n            };\r\n\r\n            return {...stateCopy};\r\n        }\r\n\r\n        case SET_PROFILE_DATA: {\r\n            return {\r\n                ...state,\r\n                profileData: action.profileData\r\n            };\r\n        }\r\n\r\n        case SET_STATUS: {\r\n            return {\r\n                ...state,\r\n                status: action.status\r\n            };\r\n        }\r\n\r\n        case DELETE_POST:\r\n            return {\r\n                ...state, posts: state.posts.filter(p => p.id !== action.postId)\r\n            };\r\n\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport const addPost = (newPostBody) => ({type: ADD_POST, newPostBody});\r\nconst setProfileData = (profileData) => ({type: SET_PROFILE_DATA, profileData});\r\nconst setStatus = (status) => ({type: SET_STATUS, status});\r\nexport const deletePost = (postId) => ({type: DELETE_POST, postId});\r\n\r\nexport const getUserProfile = (userId) => async (dispatch) => {\r\n    dispatch(toggleIsFetching(true));\r\n    let response = await profileAPI.getProfile(userId);\r\n    dispatch(toggleIsFetching(false));\r\n    dispatch(setProfileData(response.data));\r\n};\r\n\r\nexport const getStatus = (userId) => async (dispatch) => {\r\n    let response = await profileAPI.getStatus(userId);\r\n    dispatch(setStatus(response.data));\r\n};\r\n\r\nexport const updateStatus = (status) => async (dispatch) => {\r\n    let response = await profileAPI.updateStatus(status);\r\n    if (response.data.resultCode === 0) {\r\n        dispatch(setStatus(status));\r\n    }\r\n};\r\n\r\nexport default profileReducer;","const SEND_MESSAGE = 'social_network/messages/SEND-MESSAGE';\r\n\r\nlet initialState = {\r\n    dialogs: [\r\n        {id: 1, name: 'Dima'},\r\n        {id: 2, name: 'Kolya'},\r\n        {id: 3, name: 'Igor'},\r\n        {id: 4, name: 'Olya'},\r\n        {id: 5, name: 'Masha'},\r\n        {id: 6, name: 'Angelika'}\r\n    ],\r\n    messages: [\r\n        {id: 1, text: 'Hi!', yours: true},\r\n        {id: 2, text: 'Hello', yours: false},\r\n        {id: 3, text: 'How are you?', yours: true},\r\n        {id: 4, text: 'I\\'m fine thanks. What about you?', yours: false},\r\n        {id: 5, text: 'BAD :(', yours: true},\r\n        {id: 6, text: 'Why so?', yours: false}\r\n    ]\r\n};\r\n\r\nexport const messagesReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case SEND_MESSAGE:\r\n            let body = action.newMessageBody;\r\n            state.messages.push({id: 6, text: body, yours: true});\r\n            return Object.assign({}, state);\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport const sendMessage = (newMessageBody) => ({type: SEND_MESSAGE, newMessageBody});\r\n\r\nexport default messagesReducer;","let initialState = {};\r\n\r\nconst sidebarReducer = (state = initialState, action) => {\r\n\r\n    return state;\r\n};\r\n\r\nexport default sidebarReducer;","import {toggleIsFetching} from './common-reducer';\r\nimport {usersAPI} from '../api/api';\r\n\r\nconst FOLLOW_SUCCESS = 'social_network/users/FOLLOW_SUCCESS';\r\nconst UNFOLLOW_SUCCESS = 'social_network/users/UNFOLLOW_SUCCESS';\r\nconst SET_USERS = 'social_network/users/SET_USERS';\r\nconst SET_CURRENT_PAGE = 'social_network/users/SET_CURRENT_PAGE';\r\nconst SET_TOTAL_USERS_COUNT = 'social_network/users/SET_TOTAL_USERS_COUNT';\r\nconst TOGGLE_FOLLOWING_IN_PROGRESS = 'social_network/users/TOGGLE_FOLLOWING_IN_PROGRESS';\r\n\r\nlet initialState = {\r\n    users: [],\r\n    pageSize: 5,\r\n    totalUsersCount: 20,\r\n    currentPage: 1,\r\n    followingInProgress: []\r\n};\r\n\r\nconst usersReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case FOLLOW_SUCCESS:\r\n            return {\r\n                ...state,\r\n                users: state.users.map(u => {\r\n                    if (u.id === action.userID) {\r\n                        return {...u, followed: true};\r\n                    }\r\n                    return u;\r\n                })\r\n            };\r\n        case UNFOLLOW_SUCCESS:\r\n            return {\r\n                ...state,\r\n                users: state.users.map(u => {\r\n                    if (u.id === action.userID) {\r\n                        return {...u, followed: false};\r\n                    }\r\n                    return u;\r\n                })\r\n            };\r\n        case SET_USERS:\r\n            return {...state, users: [...action.users]};\r\n        case SET_CURRENT_PAGE:\r\n            return {...state, currentPage: action.pageNumber};\r\n        case SET_TOTAL_USERS_COUNT:\r\n            return {...state, totalUsersCount: action.totalUsersCount};\r\n        case TOGGLE_FOLLOWING_IN_PROGRESS:\r\n            return {\r\n                ...state,\r\n                followingInProgress: action.isFetching\r\n                    ? [...state.followingInProgress, action.userId]\r\n                    : state.followingInProgress.filter(id => id !== action.userId)\r\n            };\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport const followSuccess = (userID) => ({type: FOLLOW_SUCCESS, userID});\r\nexport const unfollowSuccess = (userID) => ({type: UNFOLLOW_SUCCESS, userID});\r\nexport const setUsers = (users) => ({type: SET_USERS, users});\r\nexport const setCurrentPage = (pageNumber) => ({type: SET_CURRENT_PAGE, pageNumber});\r\nexport const setTotalUsersCount = (totalUsersCount) => ({type: SET_TOTAL_USERS_COUNT, totalUsersCount});\r\nexport const toggleFollowingInProgress = (isFetching, userId) => ({\r\n    type: TOGGLE_FOLLOWING_IN_PROGRESS,\r\n    isFetching, userId\r\n});\r\n\r\nexport const requestUsers = (page, pageSize) => async (dispatch) => {\r\n    dispatch(toggleIsFetching(true));\r\n    let response = await usersAPI.getUsers(page, pageSize);\r\n    dispatch(toggleIsFetching(false));\r\n\r\n    dispatch(setUsers(response.data.items));\r\n    dispatch(setTotalUsersCount(response.data.totalCount));\r\n    dispatch(setCurrentPage(page));\r\n};\r\n\r\nexport const follow = (userId) => async (dispatch) => {\r\n    dispatch(toggleFollowingInProgress(true, userId));\r\n    let response = await usersAPI.follow(userId);\r\n    if (response.data.resultCode === 0) {\r\n        dispatch(followSuccess(userId));\r\n    }\r\n    dispatch(toggleFollowingInProgress(false, userId));\r\n};\r\n\r\nexport const unfollow = (userId) => async (dispatch) => {\r\n    dispatch(toggleFollowingInProgress(true, userId));\r\n    let response = await usersAPI.unfollow(userId);\r\n    if (response.data.resultCode === 0) {\r\n        dispatch(unfollowSuccess(userId));\r\n    }\r\n    dispatch(toggleFollowingInProgress(false, userId));\r\n};\r\n\r\nexport default usersReducer;\r\n\r\n","import {authAPI} from '../api/api';\r\nimport {stopSubmit} from 'redux-form';\r\n\r\nconst SET_AUTH_USER_DATA = 'social_network/auth/SET_AUTH_USER_DATA';\r\n\r\nconst initialState = {\r\n    userId: null,\r\n    login: null,\r\n    email: null,\r\n    isAuth: false\r\n};\r\n\r\nconst authReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case SET_AUTH_USER_DATA:\r\n            return {\r\n                ...state,\r\n                ...action.payload\r\n            };\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nconst setAuthUserData = (userId, login, email, isAuth) => ({\r\n    type: SET_AUTH_USER_DATA,\r\n    payload: {userId, login, email, isAuth}\r\n});\r\n\r\nexport const getAuthUserData = () => async (dispatch) => {\r\n    let response = await authAPI.setAuthUserData();\r\n\r\n    if (response.data.resultCode === 0) {\r\n        const {id, login, email} = response.data.data;\r\n        dispatch(setAuthUserData(id, login, email, true));\r\n    }\r\n};\r\n\r\nexport const login = (email, password, rememberMe) => async (dispatch) => {\r\n    let response = await authAPI.login(email, password, rememberMe);\r\n\r\n    if (response.data.resultCode === 0) {\r\n        dispatch(getAuthUserData());\r\n    } else {\r\n        let errorMessage = (response.data.messages.length > 0) ? response.data.messages[0] : '';\r\n        dispatch(stopSubmit('login', {_error: errorMessage}));\r\n    }\r\n};\r\n\r\nexport const logout = () => async (dispatch) => {\r\n    let response = await authAPI.logout();\r\n\r\n    if (response.data.resultCode === 0) {\r\n        dispatch(setAuthUserData(null, null, null, false));\r\n    }\r\n};\r\n\r\nexport default authReducer;","import {getAuthUserData} from './auth-reducer';\r\n\r\nconst INITIALIZED_SUCCESS = 'INITIALIZED_SUCCESS';\r\n\r\nconst initialState = {\r\n    initialized: false\r\n};\r\n\r\nconst appReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case INITIALIZED_SUCCESS:\r\n            return {\r\n                ...state,\r\n                initialized: true\r\n            };\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nconst initializedSuccess = () => ({type: INITIALIZED_SUCCESS});\r\n\r\nexport const initializeApp = () => (dispatch) => {\r\n    dispatch(getAuthUserData()).then(() => {\r\n        dispatch(initializedSuccess());\r\n    });\r\n};\r\n\r\nexport default appReducer;","import {applyMiddleware, combineReducers, createStore} from 'redux';\r\nimport profileReducer from './profile-reducer';\r\nimport messagesReducer from './messages-reducer';\r\nimport sidebarReducer from './sidebar-reducer';\r\nimport usersReducer from './users-reducer';\r\nimport commonReducer from './common-reducer';\r\nimport authReducer from './auth-reducer';\r\nimport thunkMiddleware from 'redux-thunk';\r\nimport {reducer as formReducer} from 'redux-form';\r\nimport appReducer from './app-reducer';\r\n\r\nlet reducers = combineReducers({\r\n    common: commonReducer,\r\n    profilePage: profileReducer,\r\n    messagesPage: messagesReducer,\r\n    sidebar: sidebarReducer,\r\n    usersPage: usersReducer,\r\n    auth: authReducer,\r\n    form: formReducer,\r\n    app: appReducer\r\n});\r\n\r\nlet store = createStore(reducers, applyMiddleware(thunkMiddleware));\r\nwindow.store = store;\r\n\r\nexport default store;","import React from 'react';\r\nimport classes from './Navbar.module.css';\r\nimport {NavLink} from 'react-router-dom';\r\n\r\nconst Navbar = () => {\r\n    return <nav className={classes.nav}>\r\n        <div className={classes.item}>\r\n            <NavLink to=\"/profile\">My profile</NavLink>\r\n        </div>\r\n        <div className={classes.item}>\r\n            <NavLink to=\"/feed\">News</NavLink>\r\n        </div>\r\n        <div className={classes.item}>\r\n            <NavLink to=\"/messages\">Messages</NavLink>\r\n        </div>\r\n\r\n        <div className={classes.item}>\r\n            <NavLink to=\"/audio\">Music</NavLink>\r\n        </div>\r\n        <div className={classes.item}>\r\n            <NavLink to=\"/settings\">Settings</NavLink>\r\n        </div>\r\n\r\n        <div className={classes.item}>\r\n            <NavLink to=\"/users\">Users</NavLink>\r\n        </div>\r\n    </nav>\r\n}\r\n\r\nexport default Navbar;","import React from \"react\";\r\nimport styles from './Feed.module.css';\r\n\r\nconst Feed = (props) => {\r\n    return (\r\n        <div className={styles.messages}>\r\n            Feed\r\n        </div>\r\n    )\r\n};\r\n\r\nexport default Feed;","import React from \"react\";\r\nimport styles from './Music.module.css';\r\n\r\nconst Music = (props) => {\r\n    return (\r\n        <div>\r\n            Music\r\n        </div>\r\n    )\r\n};\r\n\r\nexport default Music;","import React from \"react\";\r\nimport styles from './Settings.module.css';\r\n\r\nconst Settings = (props) => {\r\n    return (\r\n        <div>\r\n            Settings\r\n        </div>\r\n    )\r\n};\r\n\r\nexport default Settings;","import React from 'react';\r\nimport styles from \"../Messages.module.css\";\r\nimport {NavLink} from \"react-router-dom\";\r\n\r\nconst Dialog = (props) => {\r\n    const path = \"/messages/\" + props.id;\r\n\r\n    return (\r\n        <div className={styles.dialog}>\r\n            <NavLink to={path}>{props.name}</NavLink>\r\n        </div>\r\n    )\r\n};\r\n\r\nexport default Dialog;","import React from 'react';\r\nimport styles from \"../Messages.module.css\";\r\n\r\nconst Message = (props) => {\r\n    if (props.yours) {\r\n        return (\r\n            <div className={styles.messageYours}>\r\n                {props.text}\r\n            </div>\r\n        )\r\n    } else {\r\n        return (\r\n            <div className={styles.message}>\r\n                {props.text}\r\n            </div>\r\n        )\r\n    }\r\n};\r\n\r\nexport default Message;","import React from \"react\";\r\nimport styles from './FormsControls.module.css';\r\n\r\nexport const Element = (Element) => ({input, meta, ...props}) => {\r\n    const hasError = meta.touched && meta.error;\r\n    return (\r\n        <div>\r\n            <Element className={styles.formControl + ' ' + (hasError && styles.error)} {...input} {...props} />\r\n            <div>\r\n                {hasError && <span className={styles.error}>{meta.error}</span>}\r\n            </div>\r\n        </div>\r\n    );\r\n};","export const required = (value) => {\r\n    if (value) return undefined;\r\n\r\n    return 'Field is required';\r\n};\r\n\r\nexport const maxLength = (maxLength) => (value) => {\r\n    if (value && value.length < maxLength) return undefined;\r\n\r\n    return `Max length is ${maxLength}`;\r\n};","import React from \"react\";\r\nimport styles from './Messages.module.css';\r\nimport Dialog from \"./Dialog/Dialog\";\r\nimport Message from \"./Message/Message\";\r\nimport {Field, reduxForm} from \"redux-form\";\r\nimport {Element} from \"../common/FormsControls/FormsControls\";\r\nimport {maxLength, required} from \"../../utils/validators\";\r\n\r\nconst Messages = (props) => {\r\n    const dialogsElements = props.messagesPage.dialogs.map(dialog => <Dialog id={dialog.id} name={dialog.name}/>);\r\n    const messagesElements = props.messagesPage.messages.map(message => <Message id={message.id}\r\n                                                                                 text={message.text}\r\n                                                                                 yours={message.yours}/>);\r\n\r\n    const addNewMessage = (values) => {\r\n        props.sendMessage(values.newMessageBody);\r\n    };\r\n\r\n    return (\r\n        <div className={styles.messages}>\r\n            <div className={styles.messagesUsers}>\r\n                {dialogsElements}\r\n            </div>\r\n            <div className={styles.messagesBlock}>\r\n                <div>{messagesElements}</div>\r\n\r\n                <AddMessageForm onSubmit={addNewMessage}/>\r\n            </div>\r\n        </div>\r\n    )\r\n};\r\n\r\nconst maxLength100 = maxLength(100);\r\nconst Textarea = Element(\"textarea\");\r\n\r\nlet AddMessageForm = (props) => (\r\n    <form onSubmit={props.handleSubmit}>\r\n        <Field component={Textarea} name='newMessageBody' validate={[required, maxLength100]}\r\n               placeholder='Enter your message...'/>\r\n        <button>Send</button>\r\n    </form>\r\n);\r\nAddMessageForm = reduxForm({form: 'dialogAddMessageForm'})(AddMessageForm);\r\n\r\nexport default Messages;","import React from 'react';\r\nimport {Redirect} from \"react-router-dom\";\r\nimport {connect} from \"react-redux\";\r\n\r\nlet mapStateToPropsForRedirect = (state) => ({isAuth: state.auth.isAuth});\r\n\r\nexport const withAuthRedirect = (Component) => {\r\n    const RedirectComponent = (props) => {\r\n        if (!props.isAuth) {\r\n            return <Redirect to='/login'/>\r\n        }\r\n        return <Component {...props} />\r\n    };\r\n\r\n    const ConnectedAuthRedirectComponent = connect(mapStateToPropsForRedirect)(RedirectComponent);\r\n\r\n    return ConnectedAuthRedirectComponent;\r\n};","import React from \"react\";\r\nimport {sendMessage} from \"../../redux/messages-reducer\";\r\nimport Messages from \"./Messages\";\r\nimport {connect} from \"react-redux\";\r\nimport {withAuthRedirect} from \"../../hoc/withAuthRedirect\";\r\nimport {withRouter} from \"react-router-dom\";\r\nimport {compose} from \"redux\";\r\n\r\nlet mapStateToProps = (state) => ({messagesPage: state.messagesPage});\r\n\r\nexport default compose(\r\n    connect(mapStateToProps, {sendMessage}),\r\n    withRouter,\r\n    withAuthRedirect\r\n)(Messages);","import styles from './Users.module.css';\r\nimport {Link} from 'react-router-dom';\r\nimport React from 'react';\r\n\r\nconst Paginator = (props) => {\r\n    let pageCount = Math.ceil(props.totalUsersCount / props.pageSize);\r\n    let pages = [];\r\n    for (let i = 1; i <= pageCount; i++) {\r\n        pages.push(i);\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            {pages.map(p => {\r\n                if (Math.abs(p - props.currentPage) < 5) {\r\n                    const linkStyle = styles.page + ((p === props.currentPage) ? (' ' + styles.selectedPage) : '');\r\n                    return <Link to={'?page=' + p} key={p.id}\r\n                                 className={linkStyle}\r\n                                 onClick={() => {\r\n                                     props.onPageChanged(p);\r\n                                 }}\r\n                    >{p} </Link>;\r\n                }\r\n            })}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Paginator;","import {NavLink} from 'react-router-dom';\r\nimport userDefaultPhoto from '../../assets/no-photo.png';\r\nimport styles from './Users.module.css';\r\nimport React from 'react';\r\n\r\nconst User = (props) => (\r\n    <div>\r\n        <span>\r\n            <div>\r\n                <NavLink to={`/profile/${props.user.id}`}>\r\n                    <img src={(props.user.photos.small !== null) ? props.user.photos.small : userDefaultPhoto}\r\n                         className={styles.photo}\r\n                         alt=''/>\r\n                </NavLink>\r\n            </div>\r\n            <div>\r\n                {props.user.followed ? <button disabled={props.followingInProgress.some(id => id === props.user.id)}\r\n                                          onClick={() => props.onUnfollowClick(props.user.id)}>Unfollow</button> :\r\n                    <button disabled={props.followingInProgress.some(id => id === props.user.id)}\r\n                            onClick={() => props.onFollowClick(props.user.id)}>Follow</button>}\r\n            </div>\r\n        </span>\r\n        <span>\r\n            <span>\r\n                <div>{props.user.name}</div>\r\n                <div>{props.user.status}</div>\r\n            </span>\r\n            <span>\r\n                <div>props.location.country</div>\r\n                <div>props.location.city</div>\r\n            </span>\r\n        </span>\r\n    </div>\r\n);\r\n\r\nexport default User;","import React from 'react';\r\nimport Paginator from './Paginator';\r\nimport User from './User';\r\n\r\nconst Users = (props) => {\r\n    return (\r\n        <div>\r\n            <Paginator totalUsersCount={props.totalUsersCount} pageSize={props.pageSize}\r\n                       currentPage={props.currentPage} onPageChanged={props.onPageChanged}/>\r\n            {\r\n                props.users.map(user => <User key={user.id} user={user} followingInProgress={props.followingInProgress}\r\n                                              onFollowClick={props.onFollowClick}\r\n                                              onUnfollowClick={props.onUnfollowClick}/>)\r\n            }\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Users;","import React from 'react';\r\nimport preloader from \"../../assets/preloader.svg\";\r\n\r\nlet Preloader = () => {\r\n    return <img src={preloader} alt=\"\"/>\r\n};\r\n\r\nexport default Preloader;","import {createSelector} from \"reselect\";\r\n\r\nexport const getUsers = (state) => state.usersPage.users;\r\n//export const getUsersSuper = createSelector(getUsers, (users) => users.filter(u => true));\r\nexport const getPageSize = (state) => state.usersPage.pageSize;\r\nexport const getTotalUsersCount = (state) => state.usersPage.totalUsersCount;\r\nexport const getCurrentPage = (state) => state.usersPage.currentPage;\r\nexport const getIsFetching = (state) => state.usersPage.isFetching;\r\nexport const getFollowingInProgress = (state) => state.usersPage.followingInProgress;","import React from 'react';\r\nimport {connect} from 'react-redux';\r\nimport {follow, requestUsers, unfollow} from '../../redux/users-reducer';\r\nimport Users from './Users';\r\nimport Preloader from '../common/Preloader';\r\nimport {\r\n    getCurrentPage,\r\n    getFollowingInProgress,\r\n    getIsFetching,\r\n    getPageSize,\r\n    getTotalUsersCount,\r\n    getUsers,\r\n} from '../../redux/users-selectors';\r\n\r\nclass UsersContainer extends React.Component {\r\n    componentDidMount() {\r\n        const query = new URLSearchParams(this.props.location.search);\r\n        const page = query.get('page') ? Number(query.get('page')) : 1;\r\n        const {pageSize} = this.props;\r\n\r\n        this.props.requestUsers(page, pageSize);\r\n    }\r\n\r\n\r\n    render() {\r\n        return <>\r\n            {this.props.isFetching ? <Preloader/> : null}\r\n\r\n            <Users totalUsersCount={this.props.totalUsersCount} pageSize={this.props.pageSize}\r\n                   currentPage={this.props.currentPage}\r\n                   onPageChanged={(pageNumber) => this.props.requestUsers(pageNumber, this.props.pageSize)}\r\n                   users={this.props.users}\r\n                   onFollowClick={this.props.follow} onUnfollowClick={this.props.unfollow}\r\n                   followingInProgress={this.props.followingInProgress}/>\r\n        </>;\r\n    }\r\n}\r\n\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        users: getUsers(state),\r\n        //users: getUsersSuper(state),\r\n        pageSize: getPageSize(state),\r\n        totalUsersCount: getTotalUsersCount(state),\r\n        currentPage: getCurrentPage(state),\r\n        isFetching: getIsFetching(state),\r\n        followingInProgress: getFollowingInProgress(state)\r\n    };\r\n};\r\n\r\nexport default connect(mapStateToProps, {\r\n    requestUsers,\r\n    follow,\r\n    unfollow\r\n})(UsersContainer);","import React, {useEffect, useState} from \"react\";\r\n\r\nconst ProfileStatus = (props) => {\r\n    let [editMode, setEditMode] = useState(false);\r\n    let [status, setStatus] = useState(props.status);\r\n\r\n    useEffect(() => {\r\n        setStatus(props.status);\r\n    }, [props.status]);\r\n\r\n    const activateEditMode = () => {\r\n        setEditMode(true);\r\n    };\r\n    const deactivateEditMode = () => {\r\n        setEditMode(false);\r\n        props.updateStatus(status);\r\n    };\r\n    const onKeyPress = (e) => {\r\n        if (e.key === 'Enter') deactivateEditMode();\r\n    };\r\n\r\n    const updateStatus = (e) => {\r\n        setStatus(e.currentTarget.value);\r\n    };\r\n\r\n    return (\r\n        <div>\r\n            {!editMode &&\r\n            <div>\r\n                <span onDoubleClick={activateEditMode}>{status}</span>\r\n            </div>\r\n            }\r\n\r\n            {editMode &&\r\n            <div>\r\n                <input autoFocus={true} onBlur={deactivateEditMode} type='text'\r\n                       value={status} onChange={updateStatus} onKeyPress={onKeyPress}/>\r\n            </div>\r\n            }\r\n        </div>\r\n    )\r\n};\r\n\r\nexport default ProfileStatus;","import React from 'react';\r\nimport './Contacts.css';\r\n\r\nconst Contact = (props) => {\r\n    return (\r\n        <a target='_blank' rel='noopener noreferrer' href={props.link}><div  className={props.title}/></a>\r\n    );\r\n};\r\n\r\nexport default Contact;\r\n\r\n","import React from 'react';\r\nimport styles from './ProfileInfo.module.css';\r\nimport Contact from './Contact';\r\n\r\nconst Contacts = (props) => {\r\n    let contactsUserHas = Object.entries(props.contacts).filter(el => el[1] !== null);\r\n    let contactsImages = contactsUserHas.map(el => <Contact title={el[0]} link={el[1]}/>);\r\n\r\n    return (\r\n        <div className={styles.contacts}>\r\n            {contactsImages}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Contacts;","import React from 'react';\r\nimport styles from './ProfileInfo.module.css';\r\nimport Preloader from '../../common/Preloader';\r\nimport ProfileStatus from './ProfileStatus';\r\nimport userDefaultPhoto from './../../../assets/no-photo.png';\r\nimport Contacts from './Contacts';\r\n\r\nconst ProfileInfo = (props) => {\r\n    if (!props.profileData) {\r\n        return <Preloader/>;\r\n    } else {\r\n        return (\r\n            <div>\r\n                <div className={styles.profileInfo}>\r\n                    <img src={props.profileData.photos.large ? props.profileData.photos.large : userDefaultPhoto}\r\n                         alt=''/>\r\n                    <div>\r\n                        <h1>{props.profileData.fullName}</h1>\r\n                        <ProfileStatus status={props.status} updateStatus={props.updateStatus}/>\r\n                        <p>{props.profileData.aboutMe}</p>\r\n                    </div>\r\n                </div>\r\n                <Contacts contacts={props.profileData.contacts}/>\r\n            </div>\r\n        );\r\n    }\r\n};\r\n\r\nexport default ProfileInfo;","import React from 'react';\r\nimport styles from './Post.module.css';\r\n\r\nconst Post = (props) => {\r\n    return (\r\n        <div className={styles.post}>\r\n            <img className={styles.postLogo}\r\n                 src=\"https://i.pinimg.com/236x/e9/06/de/e906de319adee56b1d9060b9c993b749.jpg\" alt=\"\"/> Рома Дрюцкий\r\n            <div className={styles.postText}>\r\n                {props.text}\r\n            </div>\r\n        </div>\r\n    )\r\n};\r\n\r\nexport default Post;","import React from 'react';\r\nimport styles from './MyPosts.module.css';\r\nimport Post from './Post/Post';\r\nimport {Field, reduxForm} from 'redux-form';\r\nimport {maxLength, required} from '../../../utils/validators';\r\nimport {Element} from '../../common/FormsControls/FormsControls';\r\n\r\nconst MyPosts = (props) => {\r\n    console.log('render');\r\n    const postsElements = props.posts.map(post => <Post id={post.id} text={post.text}\r\n                                                        likesCount={post.likesCount}/>);\r\n\r\n    const addNewPost = (values) => {\r\n        props.addPost(values.newPostBody);\r\n    };\r\n\r\n    return (\r\n        <div className={styles.myPosts}>\r\n            <p>My Posts:</p><br/>\r\n            <AddPostForm onSubmit={addNewPost}/>\r\n            {postsElements}\r\n        </div>\r\n    );\r\n};\r\n\r\nconst maxLength30 = maxLength(30);\r\nconst Textarea = Element('textarea');\r\n\r\nlet AddPostForm = (props) => (\r\n    <form onSubmit={props.handleSubmit} className={styles.addPostForm}>\r\n        <div>\r\n            <div className={styles.imgAndTextarea}>\r\n                <img className={styles.profilePic}\r\n                     src='https://i.pinimg.com/236x/e9/06/de/e906de319adee56b1d9060b9c993b749.jpg' alt=''/>\r\n                <Field component={Textarea} name='newPostBody' validate={[required, maxLength30]}\r\n                       cols='30' rows='3' placeholder='Enter your post...'/>\r\n            </div>\r\n            <div className={styles.newPostBtn}>\r\n                <button>New Post</button>\r\n            </div>\r\n        </div>\r\n    </form>\r\n);\r\nAddPostForm = reduxForm({form: 'profileAddPostForm'})(AddPostForm);\r\n\r\nexport default MyPosts;","import React from 'react';\r\nimport MyPosts from \"./MyPosts\";\r\nimport {addPost} from \"../../../redux/profile-reducer\";\r\nimport {connect} from \"react-redux\";\r\n\r\nlet mapStateToProps = (state) => ({\r\n    posts: state.profilePage.posts\r\n});\r\n\r\nconst MyPostsContainer = connect(mapStateToProps, {addPost})(MyPosts);\r\n\r\nexport default MyPostsContainer;","import React from 'react';\r\nimport ProfileInfo from './ProfileInfo/ProfileInfo';\r\nimport MyPostsContainer from './MyPosts/MyPostsContainer';\r\n\r\nlet Profile = (props) => {\r\n    return (\r\n        <div>\r\n            <ProfileInfo {...props}/>\r\n            <MyPostsContainer/>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Profile;\r\n","import React from 'react';\r\nimport Profile from \"./Profile\";\r\nimport {connect} from \"react-redux\";\r\nimport {getStatus, getUserProfile, updateStatus} from \"../../redux/profile-reducer\";\r\nimport {withRouter} from \"react-router-dom\";\r\nimport {toggleIsFetching} from \"../../redux/common-reducer\";\r\nimport {withAuthRedirect} from \"../../hoc/withAuthRedirect\";\r\nimport {compose} from \"redux\";\r\n\r\nclass ProfileContainer extends React.Component {\r\n    componentDidMount() {\r\n        let userId = this.props.match.params.userId;\r\n        if (!userId) {\r\n            userId = this.props.userId;\r\n        }\r\n        this.props.getUserProfile(userId);\r\n        this.props.getStatus(userId);\r\n\r\n        /*\r\n        this.props.getAuthUserData();\r\n                let data = {\r\n                    \"aboutMe\": \"был, есть и буду\",\r\n                    \"contacts\": {\r\n                        \"facebook\": \"facebook.com\",\r\n                        \"github\": \"github.com\",\r\n                        \"instagram\": \"instagram.com/sds\",\r\n                        \"mainLink\": null,\r\n                        \"twitter\": \"https://twitter.com/@sdf\",\r\n                        \"vk\": \"vk.com/dimych\",\r\n                        \"website\": null,\r\n                        \"youtube\": null\r\n                    },\r\n                    \"lookingForAJob\": \"true\",\r\n                    \"lookingForAJobDescription\": 'не ищу',\r\n                    \"fullName\": \"Рома Дрюцкий\"\r\n                };\r\n                axios.put(`https://social-network.samuraijs.com/api/1.0/profile`, data,\r\n                    {\r\n                        withCredentials: true,\r\n                        headers: {'API-KEY': '2e403f5c-5d3b-4ee4-a662-100f73be85da'}\r\n                    })\r\n                    .then(response => {\r\n                        console.log(response)\r\n                    })*/\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <Profile {...this.props}/>\r\n        )\r\n    }\r\n}\r\n\r\nlet mapStateToProps = (state) => ({\r\n    isFetching: state.usersPage.isFetching,\r\n    profileData: state.profilePage.profileData,\r\n    status: state.profilePage.status,\r\n    userId: state.auth.userId\r\n});\r\n\r\nexport default compose(\r\n    connect(mapStateToProps, {toggleIsFetching, getUserProfile, getStatus, updateStatus}),\r\n    withRouter,\r\n    withAuthRedirect\r\n)(ProfileContainer);","import React from 'react';\r\nimport styles from './Header.module.css';\r\nimport {NavLink} from \"react-router-dom\";\r\n\r\nconst Header = (props) => {\r\n    return <header className={styles.header}>\r\n        <div>\r\n            <NavLink to=\"/feed\">\r\n                <img src=\"https://cdn3.iconfinder.com/data/icons/picons-social/57/56-apple-512.png\" alt=\"\"/>\r\n            </NavLink>\r\n        </div>\r\n        <div className={styles.loginBlock}>\r\n            {props.isAuth ?\r\n                <div>{props.login}\r\n                    <div>\r\n                        <button onClick={props.onLogoutClick}>logout</button>\r\n                    </div>\r\n                </div> :\r\n                <NavLink to=\"/login\">Login</NavLink>}\r\n        </div>\r\n    </header>\r\n};\r\n\r\nexport default Header;","import React from 'react';\r\nimport Header from \"./Header\";\r\nimport {connect} from \"react-redux\";\r\nimport {logout} from \"../../redux/auth-reducer\";\r\n\r\nclass HeaderContainer extends React.Component {\r\n    onLogoutClick = () => {\r\n        this.props.logout();\r\n    };\r\n\r\n    render() {\r\n        return (\r\n            <Header isAuth={this.props.isAuth} login={this.props.login} onLogoutClick={this.onLogoutClick}/>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n    isAuth: state.auth.isAuth,\r\n    login: state.auth.login\r\n});\r\n\r\nexport default connect(mapStateToProps, {logout})(HeaderContainer);","import React from 'react';\r\nimport {Field, reduxForm} from 'redux-form';\r\nimport {Element} from '../common/FormsControls/FormsControls';\r\nimport {required} from '../../utils/validators';\r\nimport {connect} from 'react-redux';\r\nimport {login} from '../../redux/auth-reducer';\r\nimport {Redirect} from 'react-router-dom';\r\nimport styles from '../common/FormsControls/FormsControls.module.css';\r\n\r\nconst Login = (props) => {\r\n    const onSubmit = (formData) => {\r\n        props.login(formData.email, formData.password, formData.rememberMe);\r\n    };\r\n\r\n    if (props.isAuth) return <Redirect to='/profile'/>;\r\n\r\n    return (\r\n        <div>\r\n            <LoginForm onSubmit={onSubmit}/>\r\n        </div>\r\n    );\r\n};\r\n\r\nconst Input = Element('input');\r\nlet LoginForm = ({handleSubmit, error}) => {\r\n    return (\r\n        <form onSubmit={handleSubmit}>\r\n            <Field component={Input} validate={[required]} name='email' type=\"text\" placeholder='email'/>\r\n            <Field component={Input} validate={[required]} name='password' type=\"password\" placeholder='password'/>\r\n            <Field component='input' name='rememberMe' type='checkbox'/> remember me\r\n            {error && <div className={styles.formSummaryError}>\r\n                {error}\r\n            </div>}\r\n            <div>\r\n                <button>Login</button>\r\n            </div>\r\n        </form>\r\n    );\r\n};\r\nLoginForm = reduxForm({form: 'login'})(LoginForm);\r\n\r\nconst mapStateToProps = (state) => ({isAuth: state.auth.isAuth});\r\nexport default connect(mapStateToProps, {login})(Login);","import React from 'react';\nimport './App.css';\nimport Navbar from './Components/Navbar/Navbar';\nimport {BrowserRouter, Route} from 'react-router-dom';\nimport Feed from './Components/Feed/Feed';\nimport Music from './Components/Music/Music';\nimport Settings from './Components/Settings/Settings';\nimport MessagesContainer from './Components/Messages/MessagesContainer';\nimport UsersContainer from './Components/Users/UsersContainer';\nimport ProfileContainer from './Components/Profile/ProfileContainer';\nimport HeaderContainer from './Components/Header/HeaderContainer';\nimport Login from './Components/Login/Login';\nimport {connect} from 'react-redux';\nimport {initializeApp} from './redux/app-reducer';\nimport Preloader from './Components/common/Preloader';\n\nclass App extends React.Component {\n    componentDidMount() {\n        this.props.initializeApp();\n    }\n\n    render() {\n        if (!this.props.initialized) return <Preloader/>;\n\n        return (\n            <BrowserRouter>\n                <div className=\"app-wrapper\">\n                    <HeaderContainer/>\n                    <Navbar/>\n                    <div className=\"app-wrapper-content\">\n                        <Route path='/profile/:userId?'\n                               render={() => <ProfileContainer/>}/>\n                        <Route path='/feed' component={Feed}/>\n                        <Route path='/messages'\n                               render={() => <MessagesContainer/>}/>\n                        <Route path='/audio' component={Music}/>\n                        <Route path='/settings' component={Settings}/>\n                        <Route path='/users' component={UsersContainer}/>\n                        <Route path='/login' component={Login}/>\n                    </div>\n                </div>\n            </BrowserRouter>\n        );\n    }\n}\n\nconst mapStateToProps = (state) => ({\n    initialized: state.app.initialized\n});\n\nexport default connect(mapStateToProps, {initializeApp})(App);","import * as serviceWorker from './serviceWorker';\r\nimport store from './redux/store';\r\nimport React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App.js';\r\nimport {Provider} from \"react-redux\";\r\n\r\nReactDOM.render(<>\r\n    <Provider store={store}>\r\n        <App/>\r\n    </Provider>\r\n</>, document.getElementById('root'));\r\n\r\nserviceWorker.unregister();\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"nav\":\"Navbar_nav__21UYO\",\"item\":\"Navbar_item__3yNur\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"formControl\":\"FormsControls_formControl__1ZsEk\",\"error\":\"FormsControls_error__3UqkX\",\"formSummaryError\":\"FormsControls_formSummaryError__2RXnQ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"myPosts\":\"MyPosts_myPosts__3Bxme\",\"profilePic\":\"MyPosts_profilePic__28c-r\",\"newPostBtn\":\"MyPosts_newPostBtn__2aWnS\",\"imgAndTextarea\":\"MyPosts_imgAndTextarea__3oZH9\",\"addPostForm\":\"MyPosts_addPostForm__2GdbJ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"photo\":\"Users_photo__1AP4W\",\"page\":\"Users_page__2mHMK\",\"selectedPage\":\"Users_selectedPage__1MHnl\"};","module.exports = __webpack_public_path__ + \"static/media/no-photo.5f8f6d04.png\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"ProfileInfo_header__qg4hU\",\"profileInfo\":\"ProfileInfo_profileInfo__3ySjo\",\"contacts\":\"ProfileInfo_contacts__1mFfQ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"post\":\"Post_post__28t38\",\"postLogo\":\"Post_postLogo__3UC84\",\"postText\":\"Post_postText__3mVUG\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"Header_header__2gtIo\",\"loginBlock\":\"Header_loginBlock__3Xb00\"};"],"sourceRoot":""}